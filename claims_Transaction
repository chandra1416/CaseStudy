import mysql.connector
con=mysql.connector.connect(host="localhost",username="chandra",password="@chennai1",database='healthcare')
cur=con.cursor()
<----Table creation part---->
tab_t='''CREATE TABLE IF NOT EXISTS CLAIMS_Transaction(TransactionId INT,PolicyId BIGINT,PolicyNumber INT,PolicYHolderName VARCHAR(20),PolicyStartDate DATE,PolicyExpirationDate VARCHAR(15),PolicyType VARCHAR(25),ClaimID INT,ClaimType VARCHAR(20),ClaimApplyDate VARCHAR(15),ClaimServiceDate VARCHAR(15),ClaimStatus VARCHAR(10),ClaimCompletionDate VARCHAR(15))'''
cur.execute(tab_t)
#Function for Converting string to date
def date_convert(x):
	format='%d-%b-%Y'
	datetime_object=datetime.datetime.strptime(x,format)
	h=datetime_object.date()
	#d=datetime.datetime.strftime(h,format)
	return h
def addDailyData(file):
	try:
		val = []
		with open(file,'r') as c:
			daily_data = csv.DictReader(c, delimiter='|')
			for row in daily_data:
				#if date is not present replace with null and if date is present as string convert  to date format
				# PolicyStartDate checking
				if len(row['PolicyStartDate']) == 0:
					PolicyStartDate = None
				else:
					PolicyStartDate = date_convert(row['PolicyStartDate'])
				# PolicyExpirationDate checking
				if len(row['PolicyExpirationDate'] )== 0:
					PolicyExpirationDate = None
				else:
					PolicyExpirationDate = date_convert(row['PolicyExpirationDate'])
				# ClaimApplyDate checking
				if len(row['ClaimApplyDate']) == 0:
					ClaimApplyDate = None
				else:
					ClaimApplyDate = date_convert(row['ClaimApplyDate'])
				# ClaimServiceDate checking	
				if len(row['ClaimServiceDate']) == 0:
					ClaimServiceDate = None
				else:
					ClaimServiceDate = date_convert(row['ClaimServiceDate'])
				# ClaimCompletionDate checking
				if len(row['ClaimCompletionDate']) == 0:
					ClaimCompletionDate = None
				else:
					ClaimCompletionDate = date_convert(row['ClaimCompletionDate'])
				#creating list for insert multiple records
				val.append((row['TransactionId'], row['PolicyId'], row['PolicyNumber'], row['PolicYHolderName'], PolicyStartDate, PolicyExpirationDate, row['PolicyType'], row['ClaimID'], row['ClaimType'], ClaimApplyDate, ClaimServiceDate, row['ClaimStatus'], ClaimCompletionDate))
		in_qry= '''INSERT INTO CLAIMS_Transaction(TransactionId,PolicyId,PolicyNumber,PolicYHolderName,PolicyStartDate,PolicyExpirationDate,PolicyType,ClaimID,ClaimType,ClaimApplyDate,ClaimServiceDate,ClaimStatus,ClaimCompletionDate) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s);'''
		cur.executemany(in_qry, val)
		#commit changes
		con.commit()
	except Exception as e:
		print("Error : ", e)
		con.rollback()
'''----------Passing Files------'''
addDailyData('Day1.csv')
addDailyData('Day2.csv')
addDailyData('Day3.csv')		
